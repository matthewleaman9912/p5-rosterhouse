{"ast":null,"code":"var _jsxFileName = \"/Users/matthewleaman/Development/code/phase-5/p5-rosterhouse/client/src/components/EditRoster.js\",\n  _s = $RefreshSig$();\nimport { useFormik } from 'formik';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditRoster({\n  id,\n  roster_size,\n  level,\n  year,\n  handleUpdateRoster\n}) {\n  _s();\n  const validationSchema = yup.object({\n    first_name: yup.string().min(2, 'Name must be at least 2 characters long'),\n    last_name: yup.string().min(2, 'Last name must be at least 2 characters long'),\n    position: yup.string().required('Position is required'),\n    age: yup.number().required('Age is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      roster_size: roster_size,\n      level: level,\n      year: year\n    },\n    onSubmit: async values => {\n      try {\n        const response = await fetch(`/rosters/${id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n        const updatedRoster = await response.json();\n        handleUpdateRoster(updatedRoster);\n      } catch (error) {\n        throw new Error('Nope');\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"edit-roster\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Roster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"roster_size\",\n        onChange: formik.handleChange,\n        value: formik.values.roster_size,\n        placeholder: \"Roster Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"level\",\n        onChange: formik.handleChange,\n        value: formik.values.level,\n        placeholder: \"Roster Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        onChange: formik.handleChange,\n        value: formik.values.year,\n        placeholder: \"Roster Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(EditRoster, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = EditRoster;\nexport default EditRoster;\nvar _c;\n$RefreshReg$(_c, \"EditRoster\");","map":{"version":3,"names":["useFormik","Formik","yup","jsxDEV","_jsxDEV","EditRoster","id","roster_size","level","year","handleUpdateRoster","_s","validationSchema","object","first_name","string","min","last_name","position","required","age","number","formik","initialValues","onSubmit","values","response","fetch","method","headers","body","JSON","stringify","updatedRoster","json","error","Error","children","handleSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","handleChange","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/matthewleaman/Development/code/phase-5/p5-rosterhouse/client/src/components/EditRoster.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport { Formik } from 'formik';\nimport * as yup from \"yup\";\n\nfunction EditRoster({ id, roster_size, level, year, handleUpdateRoster }) {\n    const validationSchema = yup.object({\n        first_name: yup.string()\n          .min(2, 'Name must be at least 2 characters long'),\n        last_name: yup.string()\n          .min(2, 'Last name must be at least 2 characters long'),\n        position: yup.string()\n          .required('Position is required'),\n        age: yup.number()\n          .required('Age is required')\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            roster_size: roster_size,\n            level: level,\n            year: year,\n        },\n        onSubmit: async (values) => {\n            try {\n                const response = await fetch(`/rosters/${id}`, {\n                    method: 'PATCH',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(values),\n                });\n                const updatedRoster = await response.json();\n                handleUpdateRoster(updatedRoster);\n            } catch (error) {\n                throw new Error('Nope')\n            }\n        },\n    });\n\n\n    return (\n        <Formik>\n            <form onSubmit={formik.handleSubmit} className=\"edit-roster\">\n                <h3>Edit Roster</h3>\n                <input \n                    type=\"text\"\n                    name=\"roster_size\"\n                    onChange={formik.handleChange}\n                    value={formik.values.roster_size}\n                    placeholder=\"Roster Size\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"level\"\n                    onChange={formik.handleChange}\n                    value={formik.values.level}\n                    placeholder=\"Roster Level\"\n                />\n                <input\n                    type=\"text\"\n                    name=\"year\"\n                    onChange={formik.handleChange}\n                    value={formik.values.year}\n                    placeholder=\"Roster Year\"\n                />\n                <button type=\"submit\">Save</button>\n            </form>\n        </Formik>\n    );\n}\nexport default EditRoster;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}